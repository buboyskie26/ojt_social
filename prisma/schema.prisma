generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  password      String
  bio           String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  birthday      DateTime
  firstName     String
  lastName      String
  userComments  Comment[]
  userPosts     Post[]
  userReactions Reaction[]
}

model Post {
  id            Int          @id @default(autoincrement())
  title         String       @db.VarChar(255)
  content       String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  isArchived Boolean @default(false) // New
  postUserId    String?      @db.VarChar(255)
  postComments  Comment[]
  postUser      User?        @relation(fields: [postUserId], references: [id])
  postReactions Reaction[]
  postImages    PostImages[]
}

model PostImages {
  id         Int    @id @default(autoincrement())
  image_name String
  isArchived Boolean @default(false)

  postImagesPostId Int
  postImagesPost   Post @relation(fields: [postImagesPostId], references: [id])
}

model Comment {
  id               Int        @id @default(autoincrement())
  content          String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  commentPostId    Int
  commentUserId    String?    @db.VarChar(255)
  commentPost      Post       @relation(fields: [commentPostId], references: [id])
  commentUser      User?      @relation(fields: [commentUserId], references: [id])
  commentReactions Reaction[]
}

model Reaction {
  id                Int      @id @default(autoincrement())
  isLiked           Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  reactionPostId    Int?
  reactionCommentId Int?
  reactionUserId    String?  @db.VarChar(255)
  reactionComment   Comment? @relation(fields: [reactionCommentId], references: [id])
  reactionPost      Post?    @relation(fields: [reactionPostId], references: [id])
  reactionUser      User?    @relation(fields: [reactionUserId], references: [id])
}
